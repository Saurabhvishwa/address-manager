{"version":3,"sources":["component/navigation.js","component/add.js","component/show.js","App.js","serviceWorker.js","index.js"],"names":["navigation","classes","this","props","AppBar","className","btnContainer","Button","variant","component","Link","to","color","btn","Component","withStyles","theme","margin","width","display","justifyContent","add","handleChange","e","preventDefault","setState","target","name","value","length","areaList","axios","get","then","res","status","data","PostOffice","map","city","state","Name","area","State","Region","errors","pincode","handleSubmit","loading","type","houseinfo","house","post","console","log","Error","error","saved","hideAlert","catch","message","response","setTimeout","handleOption","newValue","alert","Grid","grid","Alert","severity","title","Typography","form","noValidate","autoComplete","TextField","helperText","size","onChange","id","label","Autocomplete","options","getOptionSelected","option","style","renderInput","params","onClick","position","disabled","CircularProgress","progress","breakpoints","down","marginTop","spacing","marginBottom","textAlign","flexDirection","height","zIndex","Show","addresses","addressList","address","index","ExpansionPanel","key","expansion","ExpansionPanelSummary","expandIcon","align","heading","ExpansionPanelDetails","details","txtField","root","fontWeight","textShadow","borderRadius","boxShadow","border","backgroundColor","palette","primary","main","alignItems","secondary","light","alignDetail","createTheme","dark","contrastText","typography","fontFamily","Theme","overrides","MuiExpansionPanelSummary","content","MuiTypography","h4","fontSize","h5","h6","subtitle1","body1","body2","caption","defaults","baseURL","withRouter","location","exact","path","render","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.51fa4a06.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\n// material-ui\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport ToolBar from '@material-ui/core/Toolbar';\r\nimport withStyles from '@material-ui/styles/withStyles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst styles = theme => ({\r\n    btnContainer:{\r\n        margin:'0 auto',\r\n        width:400,\r\n        display:'flex',\r\n        justifyContent:'space-between'\r\n    },\r\n})\r\n\r\nclass navigation extends Component {\r\n    render() {\r\n        const {classes} = this.props;\r\n        return (\r\n            <AppBar>\r\n                <ToolBar>\r\n                    <div className={classes.btnContainer}>\r\n                        <Button variant='outlined' component={Link} to='/address-manager' color='inherit' className={classes.btn}>Add New Address</Button>\r\n                        <Button variant='outlined' component={Link} to='/address-manager/show' color='inherit'>Show Address </Button>\r\n                    </div>\r\n                </ToolBar>\r\n                \r\n            </AppBar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(navigation);","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\n// material-ui\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport withStyles from '@material-ui/styles/withStyles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nconst styles = theme => ({\r\n    grid:{\r\n        // border:'1px solid black'\r\n        position:'relative',\r\n        width:\"20%\",\r\n        [theme.breakpoints.down('sm')]:{\r\n            width:'85%'\r\n        }\r\n    },\r\n    title:{\r\n        marginTop:theme.spacing(4),\r\n        marginBottom:theme.spacing(4),\r\n        textAlign:'center'\r\n    },\r\n    form:{\r\n        display:\"flex\",\r\n        flexDirection:\"column\",\r\n        height:450,\r\n        justifyContent:'space-between'\r\n    },\r\n    progress:{\r\n        position:'absolute'\r\n    },\r\n    alert:{\r\n        width:'-webkit-fill-available',\r\n        position:'absolute',\r\n        zIndex:10,\r\n        display:'flex',\r\n        justifyContent:'center'\r\n    }\r\n})\r\n\r\nclass add extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            errors:{},\r\n            type:'',\r\n            house:'',\r\n            area:'',\r\n            city:'',\r\n            pincode:'',\r\n            state:'',\r\n            loading:false,\r\n            saved:false,\r\n            areaList:[]\r\n        }\r\n        this.alert = null\r\n    }\r\n    handleChange = (e) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            [e.target.name]:e.target.value,\r\n            errors:{}\r\n        })\r\n        \r\n         if(e.target.name === 'pincode' && e.target.value.length >= 6){\r\n            this.setState({areaList:[]})\r\n            axios.get(`https://api.postalpincode.in/pincode/${e.target.value}`)\r\n            .then(res => {\r\n                if(res.status >=200 && res.status<300){\r\n                    if(res.data[0].PostOffice){\r\n                        res.data[0].PostOffice.map(city => this.setState({\r\n                            areaList:[...this.state.areaList,city.Name]\r\n                        }))\r\n                        this.setState({\r\n                            area:this.state.areaList[0],\r\n                            state:res.data[0].PostOffice[0].State,\r\n                            city:res.data[0].PostOffice[0].Region\r\n                        })\r\n                    }\r\n                    else{\r\n                        this.setState({\r\n                            errors:{pincode:\"Invalid Pincode\"}\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.setState({loading:true})\r\n        this.setState({errors:{}})\r\n        const data = {\r\n            type:this.state.type,\r\n            houseinfo:this.state.house,\r\n            area:this.state.area,\r\n            city:this.state.city,\r\n            pincode:this.state.pincode,\r\n            state:this.state.state\r\n        }\r\n        axios.post('/add' , data)\r\n        .then(res => {\r\n            console.log(res.data)\r\n            if(res.status>=200 || res.status<300){\r\n                this.setState({\r\n                    errors:{},\r\n                    type:'',\r\n                    house:'',\r\n                    area:'',\r\n                    city:'',\r\n                    pincode:'',\r\n                    state:'',\r\n                    loading:false,\r\n                    saved:true,\r\n                    areaList:[]\r\n\r\n                })\r\n                this.hideAlert()\r\n            }else throw new Error({error:\"Something went wrong\"})\r\n        })\r\n        .catch(error => {\r\n            if(error.message === 'Request failed with status code 500' || error.message === 'Network Error'){\r\n                this.setState({\r\n                    loading:false,\r\n                    errors:{error:error.message}\r\n                })\r\n                this.hideAlert();\r\n            }\r\n            else{\r\n                this.setState({\r\n                    errors:error.response.data.errors,\r\n                    loading:false\r\n                })\r\n            }\r\n            \r\n        })\r\n    }\r\n    hideAlert = () => {\r\n        setTimeout(() => this.setState({\r\n            saved:false,\r\n            errors:{}\r\n        }),3000)\r\n    }\r\n    handleOption = (e,newValue) => {\r\n        this.setState({area:newValue})\r\n    }\r\n    render() {\r\n        const {classes} = this.props;\r\n        const {errors , loading , saved , areaList} = this.state;\r\n        return (\r\n            <Grid className={classes.grid}>\r\n                { saved && <Alert className={classes.alert} severity=\"success\">Your address has successfully saved.</Alert>}\r\n                { errors.error && <Alert className={classes.alert} severity=\"error\">Something went wrong. Try again.</Alert>}\r\n                <div className={classes.title}>\r\n\r\n                    <Typography variant='h4' color='inherit'>\r\n                        Add New Address\r\n                    </Typography>\r\n                </div>\r\n                <div>\r\n                    <form className={classes.form} noValidate autoComplete=\"off\">\r\n\r\n                        <TextField helperText={errors.type ? errors.type : ''} error={errors.type ? true : false} size='small' name='type' value={this.state.type} onChange={this.handleChange} \r\n                        id=\"addresstitle\" label=\"Address Type\" variant='standard' color='secondary' />\r\n\r\n                        <TextField helperText={errors.houseinfo ? errors.houseinfo : ''} error={errors.houseinfo ? true : false} size='small' name='house' value={this.state.house} onChange={this.handleChange} \r\n                        id=\"house\" label=\"House No. / Building No.\" variant=\"standard\" color='secondary' />\r\n\r\n                        <TextField helperText={errors.pincode ? errors.pincode : ''} error={errors.pincode ? true : false} size='small' name='pincode' value={this.state.pincode} onChange={this.handleChange} \r\n                        type='text' id=\"pincode\" label=\"Pincode\" variant=\"standard\" color='secondary' />    \r\n\r\n                        <Autocomplete\r\n                            id=\"area\"\r\n                            name='area'\r\n                            value={this.state.area}\r\n                            onChange={this.handleOption}\r\n                            options={areaList}\r\n                            getOptionSelected={(option) => option}\r\n                            style={{ width: '-webkit-fill-available' }} size='small'\r\n                            renderInput={(params) => <TextField {...params} \r\n                            helperText={errors.area ? errors.area : ''} error = {errors.area ? true : false} \r\n                            label=\"Area\" variant=\"standard\" color='secondary' />}\r\n                        />\r\n\r\n                        <TextField helperText={errors.city ? errors.city : ''} error={errors.city ? true : false} size='small' name='city' value={this.state.city} onChange={this.handleChange} \r\n                        id=\"city\" label=\"City\" variant=\"standard\" color='secondary' />\r\n\r\n                        <TextField helperText={errors.state ? errors.state : ''} error={errors.state ? true : false} size='small' name='state' value={this.state.state} onChange={this.handleChange} \r\n                        id=\"state\" label=\"State\" variant=\"standard\" color='secondary' />\r\n\r\n                        \r\n                        \r\n                        <Button variant='outlined' color='primary' size='large' onClick={this.handleSubmit} style={{position:'relative'}} disabled={loading}>\r\n                            Save Address\r\n                            {\r\n                                loading && <CircularProgress size={30} className={classes.progress} />\r\n                            }\r\n                        </Button>\r\n                        \r\n                    </form>\r\n                    \r\n                </div>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(add);","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\n\r\n// material-ui\r\nimport withStyles from '@material-ui/styles/withStyles';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport ArrowRight from '@material-ui/icons/ArrowRight';\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    marginTop:theme.spacing(4),\r\n    width: '50%',\r\n    textAlign:'center',\r\n    [theme.breakpoints.down('sm')]:{\r\n        width:'90%'\r\n    }\r\n  },\r\n  heading: {\r\n    fontWeight: 800,\r\n    color:'white',\r\n    textShadow:'0 0 30px gray'\r\n  },\r\n  expansion:{\r\n      marginBottom:theme.spacing(2),\r\n      borderRadius:10,\r\n      boxShadow:'none',\r\n      border:'none',\r\n      '&::before':{\r\n          display:'none'\r\n      }\r\n  },\r\n  title:{\r\n      backgroundColor:theme.palette.primary.main,\r\n      borderRadius:'10px 10px 0 0'\r\n  },\r\n  details:{\r\n      display:'flex',\r\n      justifyContent:'center',\r\n      alignItems:'center',\r\n      flexDirection:'column',\r\n      backgroundColor:theme.palette.secondary.light,\r\n      borderRadius:'0 0 10px 10px'\r\n  },\r\n  alignDetail:{\r\n      display:'flex',\r\n      width:'80%',\r\n      justifyContent:'space-between',\r\n      marginBottom:theme.spacing(2)\r\n  },\r\n  txtField:{\r\n      display:'flex',\r\n      alignItems:'center'\r\n  }\r\n})\r\n\r\nclass Show extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            error:null,\r\n            addresses : [],\r\n            loading:true\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        axios.get('/')\r\n        .then((res) => {\r\n            if(res.status>=200 || res.status<300){\r\n                // console.log(res.data)\r\n                    this.setState({\r\n                        addresses:res.data.data,\r\n                        loading:false\r\n                    })\r\n                \r\n            }else throw new Error({error:\"Something went wrong\"})\r\n        })\r\n        .catch(error => {\r\n            if(error.message === 'Request failed with status code 500' || error.message === 'Network Error'){\r\n                this.setState({\r\n                    loading:false,\r\n                    error:'Something went wrong , try again.'\r\n                })\r\n            }\r\n            else{\r\n                this.setState({\r\n                    error\r\n                })\r\n            }\r\n        })\r\n    }\r\n    render(){\r\n        const {classes} = this.props;\r\n        const {addresses , loading , error} = this.state;\r\n        const addressList = loading ? (<CircularProgress/>) : (\r\n            error ? (\r\n                <Typography variant='h5' color='error'>Something went wrong. Try again.</Typography>\r\n            ) : (\r\n                addresses.length > 0 ? (\r\n                    addresses.map((address,index) => {\r\n                        return (\r\n                            <ExpansionPanel key={index} className={classes.expansion}>\r\n                                <ExpansionPanelSummary\r\n                                expandIcon={<ExpandMoreIcon />}\r\n                                className={classes.title}\r\n                                >\r\n                                <Typography variant='h5' align='center' className={classes.heading}>{address.type}</Typography>\r\n                                </ExpansionPanelSummary>\r\n                                <ExpansionPanelDetails className={classes.details}>\r\n                                    <Typography className={classes.txtField} variant='h6'><b>House No.</b>  <ArrowRight/>  {address.houseinfo}</Typography>\r\n                                    <Typography className={classes.txtField} variant='h6'><b>Area</b>  <ArrowRight/>  {address.area}</Typography>\r\n                                    <Typography className={classes.txtField} variant='h6'><b>City</b>  <ArrowRight/>  {address.city}</Typography>\r\n                                    <Typography className={classes.txtField} variant='h6'><b>Pincode</b>  <ArrowRight/>  {address.pincode}</Typography>\r\n                                    <Typography className={classes.txtField} variant='h6'><b>State</b>  <ArrowRight/>  {address.state}</Typography>\r\n                                </ExpansionPanelDetails>\r\n                            </ExpansionPanel>\r\n                        )\r\n                    })\r\n                ) : (\r\n                    <Typography variant='h6'>No addresses yet.</Typography>\r\n                )\r\n            )\r\n        )\r\n  return (\r\n    <div className={classes.root}>\r\n        {\r\n            addressList\r\n        }\r\n    </div>\r\n  )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Show)\r\n","import React from 'react';\nimport './App.css';\nimport { Route , Switch , withRouter} from 'react-router-dom';\nimport axios from 'axios';\n\n\n// components\nimport Navigation from './component/navigation';\nimport Add from './component/add';\nimport Show from './component/show';\n\n// material-ui\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\nimport createTheme from '@material-ui/core/styles/createMuiTheme';\n\n// page router\nconst theme = createTheme({\n  palette: {\n    primary: {\n      light: '#e0f7fa',\n      main: '#0097a7',\n      dark: '#006064',\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: '#bbdefb',\n      main: '#2196f3',\n      dark: '#0d47a1',\n      contrastText: '#fff',\n    },\n  },\n  typography:{\n    fontFamily:'Quicksand'\n  },\n})\n\n\nconst Theme = {\n  ...theme,\n  \n  overrides:{\n    MuiExpansionPanelSummary:{\n      content:{\n        justifyContent:'center'\n      }\n    },\n  MuiTypography:{\n    h4:{\n      [theme.breakpoints.down('sm')]:{\n        fontSize:'1.5rem'\n      }\n    },\n    h5:{\n      [theme.breakpoints.down('sm')]:{\n        fontSize:'1rem'\n      }\n    },\n    h6:{\n      [theme.breakpoints.down('sm')]:{\n        fontSize:'1rem'\n      }\n    },\n    subtitle1:{\n      [theme.breakpoints.down('sm')]:{\n        fontSize:'0.9rem'\n      }\n    },\n    body1:{\n      [theme.breakpoints.down('sm')]:{\n        fontSize:'0.8rem'\n      }\n    },\n    body2:{\n      [theme.breakpoints.down('sm')]:{\n        fontSize:'0.7rem'\n      }\n    },\n    caption:{\n      [theme.breakpoints.down('sm')]:{\n        fontSize:'0.7rem'\n      }\n    }\n  }\n}\n}\n\naxios.defaults.baseURL = \"https://us-central1-address-manager-1998.cloudfunctions.net/api\"\n\nfunction App({location}) {\n  return (\n    <div className=\"App\">\n      <MuiThemeProvider theme={Theme}>\n        <div>\n          <Navigation/>\n        </div>\n        <div className='content'>\n          <Switch>\n            <Route exact path ='/address-manager' render = {() => <Add/>}/>\n            <Route exact path ='/address-manager/show' render = {() => <Show/>}/>\n          </Switch>\n        </div>\n      </MuiThemeProvider>\n    </div>\n  );\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router} from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}